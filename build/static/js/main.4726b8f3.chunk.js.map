{"version":3,"sources":["FetchJobs.js","components/JobCard.js","components/Pagination.js","components/SearchBar.js","App.js","index.js"],"names":["ACTIONS","MAKE_REQUEST","GET_DATA","ERROR","NEXT_PAGE","BASE_URL","reducer","state","action","type","loading","jobs","payload","nextPage","error","JobCard","job","useState","show","setShow","isOpen","setIsOpen","title","description","company","created_at","location","how_to_apply","company_logo","company_url","CardGroup","Card","style","width","className","Body","Title","Subtitle","Date","toLocaleDateString","Badge","variant","href","target","height","alt","src","Text","Button","onClick","Modal","Header","Collapse","in","source","Footer","AppPagination","page","setPage","changePage","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchBar","params","onParamsChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","pageNo","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","cancelToken2","get","cancelToken","token","markdown","then","res","data","catch","isCancel","length","cancel","FetchJobs","Container","event","param","prevParams","Spinner","animation","role","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4726b8f3.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react' ;\r\nimport axios from 'axios';\r\n\r\n// Holds actions for reducer\r\nconst ACTIONS = {\r\n  MAKE_REQUEST: 'Make-request',\r\n  GET_DATA: 'get-data',\r\n  ERROR: 'error',\r\n  NEXT_PAGE: 'next-page'\r\n}; \r\n\r\nconst BASE_URL = 'https://jobs.github.com/positions.json';\r\n\r\n// called everytime Dispatch is called with action\r\nfunction reducer(state, action){\r\n  // check type\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return{ \r\n        loading: true, \r\n        jobs:[] \r\n      };\r\n\r\n    case ACTIONS.GET_DATA:\r\n      return { \r\n        ...state, \r\n        loading: false, \r\n        jobs: action.payload.jobs \r\n      };\r\n\r\n    case ACTIONS.NEXT_PAGE:\r\n      return { \r\n          ...state, \r\n          nextPage: action.payload.nextPage \r\n        };\r\n\r\n    case ACTIONS.ERROR:\r\n      return { \r\n        ...state, \r\n        loading: false, \r\n        error: action.payload.error, \r\n        jobs: [] \r\n      };\r\n\r\n    default:\r\n      return state\r\n     \r\n  }\r\n}\r\n\r\nexport default function FetchJobs(params, pageNo ) {\r\n  // set initial state of application\r\n  const [state, dispatch] = useReducer(reducer, {jobs: [], loading: true} );\r\n\r\n  // hooks\r\n  useEffect(() => {\r\n    const cancelToken1 = axios.CancelToken.source();\r\n    const cancelToken2 = axios.CancelToken.source();\r\n\r\n    // on each load make api request\r\n    dispatch({\r\n      type: ACTIONS.MAKE_REQUEST\r\n    });\r\n\r\n    axios.get(BASE_URL, {\r\n      cancelToken: cancelToken1.token,\r\n      params: {\r\n        markdown: true,\r\n        page: pageNo,\r\n        ...params\r\n      }\r\n    }).then((res) => {\r\n     const { data } = res \r\n\r\n     dispatch({\r\n        type: ACTIONS.GET_DATA,\r\n        payload: {jobs: data}});\r\n\r\n    }).catch((error) => {\r\n      if( axios.isCancel(error) ) return\r\n\r\n      dispatch({\r\n        type: ACTIONS.error,\r\n        payload: {error: error}\r\n      })\r\n\r\n    });\r\n\r\n    // next page logic\r\n    axios.get(BASE_URL, {\r\n      cancelToken: cancelToken2.token,\r\n      params: {\r\n        markdown: true,\r\n        page: pageNo + 1,\r\n        ...params\r\n      }\r\n    }).then((res) => {\r\n     const { data } = res \r\n     dispatch({\r\n        type: ACTIONS.NEXT_PAGE,\r\n        payload: { \r\n          nextPage: data.length > 0 \r\n        }\r\n      });\r\n    }).catch((error) => {\r\n      if( axios.isCancel(error) ) return\r\n      dispatch({\r\n        type: ACTIONS.error,\r\n        payload: {error: error}\r\n      })\r\n    });\r\n\r\n    return () => {\r\n      cancelToken1.cancel()\r\n      cancelToken2.cancel()\r\n    }\r\n  }, [params, pageNo]);\r\n\r\n  return state;\r\n\r\n}\r\n","import React, {useCallback, useState} from 'react';\r\nimport { Card, Badge, Button, Collapse, CardGroup, Modal } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst JobCard = ({ job }) => {\r\n\r\n const [show, setShow] = useState(false);\r\n  // modal \r\n const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const { \r\n    title,\r\n    description, \r\n    company, \r\n    created_at, \r\n    type, \r\n    location, \r\n    how_to_apply, \r\n    company_logo,\r\n    company_url } = job;\r\n\r\n  return(\r\n      <CardGroup>\r\n    <Card style={{ width: '20rem' }} className='mb-3'>\r\n      <Card.Body>\r\n      {/* <button onClick={() => {setIsOpen(true)}}>Display Modal</button> */}\r\n      {/* justify-content-between */}\r\n        <div className='d-flex '>\r\n          <div>\r\n            <Card.Title>\r\n              { title} - <span>{company}</span>\r\n            </Card.Title>\r\n            <Card.Subtitle>\r\n              {new Date(created_at).toLocaleDateString()}\r\n            </Card.Subtitle>\r\n            <Badge variant='secondary' className='mr-2'>{ type }</Badge>\r\n            <Badge variant='secondary'>{ location }</Badge>\r\n          </div>\r\n          <a href={company_url} target='_blank'>\r\n            <img className='d-none d-md-block'\r\n              height='25'\r\n              alt={company} \r\n              src={company_logo} \r\n              />\r\n          </a>\r\n        </div>\r\n        <Card.Text>\r\n          <Button className='detail-button mt-3' variant='primary' onClick={ () => {\r\n            setShow(!show);\r\n            setIsOpen(true);\r\n          }}>\r\n            {!show ? 'Details': 'Hide'}\r\n          </Button>\r\n          <a href={`https://www.linkedin.com/company/${company}`} target='_blank'>\r\n            <Button className='Linkedin ml-2 mt-3'>\r\n              Linkedin\r\n            </Button>\r\n          </a> \r\n        </Card.Text>\r\n        <Modal\r\n        show={isOpen}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>{title}</Modal.Title>\r\n           <h6>{company}</h6> \r\n           <button className='btn-danger' onClick={() => \r\n            {setIsOpen(false)\r\n            setShow(false)\r\n            }}>X</button>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Collapse in={show}>\r\n          <div className='mt-4'>\r\n            <h4>Job Description</h4>\r\n            <ReactMarkdown source={description}/>  \r\n            <h4>How to apply</h4>\r\n            <ReactMarkdown source={how_to_apply} />        \r\n          </div>\r\n        </Collapse>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button variant='primary' className='btn-primary' \r\n              onClick={()=>{\r\n                setIsOpen(false)\r\n                setShow(false)\r\n                }}>Close</button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card.Body>\r\n    </Card>\r\n    </CardGroup>\r\n    \r\n  );\r\n};\r\n\r\nexport default JobCard;","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\nconst AppPagination = ({ page, setPage, nextPage }) => {\r\n  \r\n  const changePage = (page) => { \r\n    setPage(prevPage => prevPage + page)\r\n  } \r\n\r\n  return(\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => { changePage(-1)}} />} \r\n      {page !== 1 && <Pagination.Item onClick={() => { setPage(1)}} >1</Pagination.Item>}\r\n      {page > 2 && <Pagination.Ellipsis/>}\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {nextPage && <Pagination.Item onClick={() => { changePage(1)}}>{page + 1}</Pagination.Item>}\r\n      {nextPage && <Pagination.Next onClick={() => { changePage(1)}} />}\r\n    </Pagination>\r\n  );\r\n};\r\n\r\n\r\nexport default AppPagination;","import React from 'react';\r\nimport { Form, Col } from 'react-bootstrap'\r\n\r\n\r\nconst SearchBar = ({ params, onParamsChange  }) => {\r\n  \r\n\r\n  return(\r\n    <Form className='mb-4'>\r\n      <Form.Row>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control \r\n            onChange={onParamsChange} \r\n            value={params.description} \r\n            name='description'\r\n            type='text'\r\n            />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control \r\n            onChange={onParamsChange} \r\n            value={params.location} \r\n            name='location'\r\n            type='text'\r\n            />\r\n        </Form.Group>\r\n        <Form.Group as={Col} xs='auto' className='ml-2'>\r\n          <Form.Check \r\n            onChange={onParamsChange} \r\n            value={params.full_time}\r\n            name='full_time'\r\n            id='full_time'\r\n            label='Full Time'\r\n            type='checkbox'\r\n             />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default SearchBar;","import './App.css';\nimport React, { useState } from 'react'\nimport FetchJobs from './FetchJobs' //API requests, reducer\nimport { Container, Button, Spinner} from 'react-bootstrap'\n\n// components \nimport JobCard from './components/JobCard';\nimport AppPagination from './components/Pagination';\nimport SearchBar from './components/SearchBar';\n\nfunction App() {\n  // hooks\n  const [params, setParams] = useState({});\n  const [page, setPage ] = useState(1);\n\n\n  // debounce\n  function debounceEvent(callback, time = 300) {\n    let interval;\n    return () => {\n      clearTimeout(interval);\n      interval = setTimeout(() => {\n        interval = null;\n  \n        // eslint-disable-next-line\n        callback(arguments);\n      }, time);\n    };\n  }\n    \n\n  const handleParamChange = (event) => {\n    const param = event.target.name;\n    const value = event.target.value;\n    setPage(1); \n\n    setParams(prevParams => { \n      return {\n        ...prevParams, [param]: value\n      }\n    });\n\n  }\n  // custome Hook\n  const {jobs, loading, error, nextPage} = FetchJobs(params, page);\n\n  return (\n    <Container>\n      <h1>Github Jobs</h1>\n\n      <SearchBar \n        params={params}\n        onParamsChange={handleParamChange}\n        />\n\n        <Button className='mb-2 mr-2' onClick={() => {\n          setParams({type: 'Full Time'})\n        }}>\n          Full-time\n        </Button>\n        <Button className='mb-2 mr-2' onClick={() => {\n          setParams({location: 'Remote'})\n        }}>\n          Remote\n        </Button>\n        <Button className='mb-2 mr-2 USA' onClick={() => {\n          setParams({location: 'usa'})\n        }}>\n          USA\n        </Button>\n        <Button className='mb-2 UK' onClick={() => {\n          setParams({location: 'uk'})\n        }}>\n          UK\n        </Button>\n\n        <AppPagination \n          page={page} \n          setPage={setPage}\n          nextPage={nextPage}\n          />\n          {loading ? \n             <Spinner  animation=\"border\" role=\"status\"/> \n              :(\n            <div className='jobs-container'>\n              { jobs.map((job) => {\n                return(\n                  <JobCard \n                    key={job.id} \n                    job={job}\n                    />\n                  ) \n                })}\n              </div> \n              )  \n            }\n\n      <AppPagination \n          page={page} \n          setPage={setPage}\n          nextPage={nextPage}\n          />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}